#!/usr/bin/env python3

import colorama
import pefile
import sys

from memory import Memory
from version import Version


class Program:
    EXIT_SUCCESS = 0
    EXIT_FAILURE = 1
    PROGRAM_NAME = Version.get_project_name()
    PROGRAM_VERSION = Version.get_version()

    def __init__(self, args):
        self.args = args
        self.exe_to_emulate = None

        self.printBanner()
        self.parseArguments()
        self.checkEXE(self.getEXEToEmulate())
        self.emulateEXE(self.getEXEToEmulate())

    def checkEXE(self, exe):
        self.exe = pefile.PE(exe)

        self.exe_mz_signature = self.exe.DOS_HEADER.e_magic
        if self.exe_mz_signature != 0x5A4D:
            self.exitWithError("The EXE file has wrong MZ signature!")

        self.exe_pe_signature = self.exe.NT_HEADERS.Signature
        if self.exe_pe_signature != 0x4550:
            self.exitWithError("The EXE file has wrong PE signature!")

        self.exe_machine_type = self.exe.FILE_HEADER.Machine
        if self.exe_machine_type != 0x14c:
            self.exitWithError("The EXE file is not i386 EXE!")

        self.exe_characteristics = self.exe.FILE_HEADER.Characteristics
        if not (self.exe_characteristics ^ 0x02):
            self.exitWithError("The EXE file is not executable!")

    def emulateEXE(self, exe):
        self.exe = pefile.PE(exe)

        self.exe_size_of_image = self.exe.OPTIONAL_HEADER.SizeOfImage
        self.memory = Memory(self.exe_size_of_image)

        self.exe_image_base = self.exe.OPTIONAL_HEADER.ImageBase
        self.exe_size_of_headers = self.exe.OPTIONAL_HEADER.SizeOfHeaders

    def exitWithError(self, msg):
        self.printError(msg)
        sys.exit(self.EXIT_FAILURE)

    def getEXEToEmulate(self):
        if self.exe_to_emulate is None:
            self.exitWithError("The EXE to emulate is not set!")
        else:
            return self.exe_to_emulate

    def getProgramArguments(self):
        return self.args

    def getBannerString(self):
        return f"{self.PROGRAM_NAME} {self.PROGRAM_VERSION}"

    def getTestDirectory(self):
        return self.test_directory()

    def parseArguments(self):
        if len(self.args) != 2:
            self.exitWithError("Wrong argument number!")
        else:
            self.setEXEToEmulate(self.args[1])

    def printBanner(self):
        print(self.getBannerString())

    def printError(self, msg):
        colorama.init()
        print(colorama.Fore.RED + "ERROR: " + colorama.Fore.RESET + msg)

    def setEXEToEmulate(self, exe_path):
        self.exe_to_emulate = exe_path


def main(args):
    program = Program(args)
    return Program.EXIT_SUCCESS


if __name__ == "__main__":
    sys.exit(main(sys.argv))
